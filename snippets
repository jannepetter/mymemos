
-----------------------------js---
"console.log()":{
		"prefix": "cl",
			"body": [
				"console.log($1)"
			],
		 	"description": "console.log"	
	},
"arrayfunction":{
		"prefix": "aa",
			"body": [
				"const $1 =($2)=>{",
				"$0",
				"}"
			],
		 	"description": "const arrayfunction"	
	},
"normalfunction":{
		"prefix": "ff",
			"body": [
				"function $1($2){",
				"$0",
				"}"
			],
		 	"description": "named function"	
	},

"anonymousfunction":{
		"prefix": "cb",
			"body": [
				"($1)=>{$0}",
			],
		 	"description": "anonymous arrfunction"	
	},
"stripped anonymousfunction":{
		"prefix": "cbb",
			"body": [
				"$1=>$0",
			],
		 	"description": "stripped anonarrfunc"
	},

---------------------------------js react-----------------------------------------------------------------
"function component":{
		"prefix": "rc",
			"body": [
				"import React from 'react';",
				"",
				"",
				"const $1 =(props)=>{",
				"$2",
				"return(",
				"<div>",
				"$0",
				"</div>)",
				"}",
				"",
				"export default $1"
			],
		 	"description": "new function component"	
	},

-------------------------------------------typescript react-----------------------------------------------
"new react function component":{
		"prefix": "rc",
			"body": [
				"import React from 'react'",
				"",
				"interface Props {",
				"",
				"}",
				"",
				"const $1:React.FC<Props> = (props) => {",
				"return ($2)",
				"}",
				"export default $1"
			],
		 	"description": "Typescript react function component"	
	}
---------------------python
"Print": {
		"prefix": "pr",
		"body": [
			"print('$1')"
		],
		"description": "Print"
	},
	"Input string": {
		"prefix": "inp",
		"body": [
			"$1=input('$2')"
		],
		"description": "Input in plain string"
	},
	"Input int": {
		"prefix": "inpi",
		"body": [
			"$1=int(input('$2'))"
		],
		"description": "Input cast as int"
	},
	"Function": {
		"prefix": "ff",
		"body": [
			"def $1($2):",
			"\t$0",
		],
		"description": "Function definition"
	}